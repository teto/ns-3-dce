  BOUTIQUE VOO - WATERLOO
CHAUSSEE DE BRUXELLES 159
1410 WATERLOO

NodeContainer::GetGlobal ();
EnablePcapInternal doit etre implémenté par les Device, par exemple regarder à FdNetDevice
PcapHelper::HookDefaultSink

supergrass - Alright
EMF - Unbelievable

0.600072s 1 DceNetdb:dce_getifaddrs(): [INFO ] MATT dce_getifaddr
0.600072s 1 SimuFd:dce_socket(0xb94bf0, 1, 16, 3, 0)
0.600072s 1 Ns3SocketFdFactory:CreateSocket(): [INFO ] Requesting for PF_NETLINK
0.600072s 1 DceNetlinkSocketFactory:CreateSocket()
0.600072s 1 DceNetlinkSocket:NetlinkSocket()
0.600072s 1 DceNetlinkSocket:SetNode(0xc442d0)
0.600072s 1 DceNetlinkSocket:SetNode(): [DEBUG] SetNode: 1
0.600072s 1 ProcessUtils:UtilsAllocateFd(0xb94bf0)
0.600072s 1 ProcessUtils:UtilsAllocateFd(): [DEBUG] Allocated fd=5
0.600072s 1 SimuFd:dce_bind(0xb94bf0, 1, 5, 0x7fee5d33b360, 12)
0.600072s 1 DceNetlinkSocket:Bind(0xc442d0, 04-08-00:00:00:00:00:00:00:00)
0.600072s 1 DceNetlinkSocket:DoBind(0xc442d0, pid: 0, group: 0)
0.600072s 1 SimuFd:dce_getsockname(0xb94bf0, 1, 0x7fee5d33b360, 0x7fee5d33b1ec)
0.600072s 1 DceNetlinkSocket:GetSockName()
0.600072s 1 DceNetlinkSocket:GetPid()
0.600072s 1 DceNetlinkSocket:GetGroups()
0.600072s 1 DceNetdb:netlink_request(18)
0.600072s 1 SimuFd:dce_sendto(0xb94bf0,  fd=, 5, buf=, 0x7fee5d33b150, 20,  flags=, 0,  to=, 0x7fee5d33b120,  socklen=, 12)
0.600072s 1 SimuFd:dce_sendmsg(0xb94bf0, nodeId=, 1, 5, 0x7fee5d33afe0, 0)
0.600072s 1 UnixDatagramSocketFd:DoSendmsg(0xc446f0, 0xb94bf0)
0.600072s 1 UnixDatagramSocketFd:DoSendmsg(): [DEBUG] msg->msg_iovlen=1(nb of *elements*)
0.600072s 1 UnixDatagramSocketFd:DoSendmsg(): [DEBUG] Element #0 in iov, of length [20]
0.600072s 1 UnixDatagramSocketFd:DoSendmsg(): [DEBUG] msg->msg_namelen != 0
0.600072s 1 UnixDatagramSocketFd:DoSendmsg(): [DEBUG] Sending the packet
0.600072s 1 UnixDatagramSocketFd:MainSendTo(Sending to , 04-08-00:00:00:00:00:00:00:00)
0.600072s 1 DceNetlinkSocket:SendTo(0xc442d0, 0xc1b3e0, 0, 04-08-00:00:00:00:00:00:00:00)
0.600072s 1 DceNetlinkSocket:SendTo(): [INFO ] send netlink message to pid = pid: 0, group: 0
0.600072s 1 DceNetlinkSocket:SendTo(): [DEBUG] At 0.600072s sending netlink message from node 1
0.600072s 1 DceNetlinkSocket:HandleMessage(0xc442d0)
0.600072s 1 DceNetlinkSocket:HandleNetlinkRouteMessage(0xc442d0)
0.600072s 1 DceNetlinkSocket:DumpNetlinkRouteMessage(0xc442d0, 18, 0)
0.600072s 1 DceNetlinkSocket:DumpNetlinkRouteMessage(): [INFO ] SETLINKfamily 
0.600072s 1 DceNetlinkSocket:BuildInterfaceInfoDumpMessages(0xc442d0, MATT)
0.600072s 1 DceNetlinkSocket:BuildInterfaceInfoDumpMessage(0xc442d0, interface_num=, 0)
0.600072s 1 DceNetlinkSocket:BuildInterfaceInfoDumpMessage(0xc442d0, interface_num=, 1)
0.600072s 1 DceNetlinkSocket:BuildInterfaceInfoDumpMessage(0xc442d0, interface_num=, 2)
0.600072s 1 DceNetlinkSocket:SendMessageUnicast(0xc442d0, 1)
0.600072s 1 DceNetlinkSocket:ForwardUp(0xc442d0, 0xb94d60, pid: 0, group: 0)
0.600072s 1 SimuFd:dce_recvmsg(0xb94bf0, nodeId=, 1,  fd=, 5,  msg=, 0x7fee5d33b170,  flags=, 0)
0.600072s 1 UnixDatagramSocketFd:DoRecvmsg(this=, 0xc446f0, current=, 0xb94bf0, flags=, 0)
0.600072s 1 UnixDatagramSocketFd:DoRecvmsg(): [DEBUG] Not in MSG_ERRQUEUE
0.600072s 1 DceNetlinkSocket:GetRxAvailable()
0.600072s 1 DceNetlinkSocket:GetRxAvailable()
0.600072s 1 DceNetlinkSocket:RecvFrom(0xc442d0, 4096, 0, 00-00-00)
0.600072s 1 DceNetlinkSocket:Recv(0xc442d0, 4096, 0)
0.600072s 1 UnixDatagramSocketFd:DoRecvmsg(): [WARN ] msg_controllen < 0 , is that a problem ?
0.600072s 1 SimuFd:dce_recvmsg(0xb94bf0, nodeId=, 1,  fd=, 5,  msg=, 0x7fee5d33b170,  flags=, 0)
0.600072s 1 UnixDatagramSocketFd:DoRecvmsg(this=, 0xc446f0, current=, 0xb94bf0, flags=, 0)
0.600072s 1 UnixDatagramSocketFd:DoRecvmsg(): [DEBUG] Not in MSG_ERRQUEUE
0.600072s 1 DceNetlinkSocket:GetRxAvailable()
1.6s 1 ProcessUtils:UtilsDoSignal(): [DEBUG] deliver signal=14
1.6s 1 SimuFd:dce_write(0xb94bf0, 1, 1, 0x7fee4e36df0d, 28)
1.6s 1 UnixFileFd:Write(0xb2a7c0, 0xb94bf0, 0x7fee4e36df0d, 28)
1.6s 1 DceNetlinkSocket:RecvFrom(0xc442d0, 4096, 0, 00-00-00)
1.6s 1 DceNetlinkSocket:Recv(0xc442d0, 4096, 0)
1.6s 1 UnixDatagramSocketFd:DoRecvmsg(): [ERROR] Empty packet
1.6s 1 DceNetlinkSocket:GetErrno()
1.6s 1 DceNetdb:netlink_request(): [WARN ] read_len=-1 < 0
1.6s 1 DceNetdb:dce_getifaddrs(): [WARN ] Could not RTM_GETLINK.

https://github.com/direct-code-execution/ns-3-dce/issues/2#issuecomment-99727349
Apparemment ns3 est censé recevoir les messages netlink. Vérifier avec netlink socket

Pour dce_getifaddr on pourrait se passer de Netlink si l'on detecte qu'il s'agit d'une stack ns3 ?
repo ntp
DCE agrège au Node une SocketFdFactory qui va dépendre du type de stack à priori. On peut récupérer leur type pour
justement les comparer: Ns3SocketFdFactory pour ns3

Le NotifyNewAggregate. est appelé quand un object vient d'être agrégé. 
Cela pourrait être utilisé lorsque l'on agrège une horloge (pour MAJ l'offset)

TypeId::LookupByName 
 Ns3SocketFdFactory:CreateSocket(): [INFO ] Requesting for PF_NETLINK

Check that the netlink messages are well received
RTM_GETLINK

./waf --run "test-runner" if you want to launch tests

./waf --run "test-runner --verbose --test-name=netlink-socket
NS_LOG="*" ./waf --run "test-runner --verbose --test-name=netlink-socket" > nl_xp.txt 2>&1

J'ai quand mm "DceNetlinkSocket:BuildInterfaceInfoDumpMessage" qui est appelé

Quand on a un RTM_GETLINK , la socket doit renoyver BuildInterfaceInfoDumpMessages

improv
https://www.nsnam.org/developers/roadmap/

$ i3-msg mark irssi
$ i3-msg '[con_mark="irssi"] focus'
$ i3-msg unmark irssi


But when the Alt key is used in a key combination (that is by actually pressing Alt+x), its release will not be registered by i3 and the mode "foo" will remain active until pressing and releasing key 108 again (or by pressing Escape).


# Simulate ctrl+v upon pressing $mod+x
bindsym --release $mod+x exec --no-startup-id xdotool key --clearmodifiers ctrl+v

# Take a screenshot upon pressing $mod+x (select an area)
bindsym --release $mod+x exec --no-startup-id import /tmp/latest-screenshot.png


md5 mathematica 1523e5ed52161e8bb3f55bd688e11f35

 $ doc/doxygen.warnings.report.sh -m mesh/helper



proto: precision = 3.000 usec (-18)
Listen and drop on 0 v4wildcard 0.0.0.0:123
./../lib/isc/unix/ifiter_getifaddrs.c:155: INSIST(ifa->ifa_name != ((void *)0)) failed
exiting (due to assertion failure)



== Analyse du log
newpeer: <null>->127.127.1.0 mode 3 vers 4 poll 6 6 flags 0x9 0x1 ttl 0 key 00000000
fait référence à soi même: on est soi mm l'hrologe de réf cf "server 127.127.1.0" dans la config
 * \verbatim
 *                          1                   2                   3
 *      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 *     +---------------+---------------+-------+-----------------------+
 *     |     Kind      |    Length     |Subtype|                       |
 *     +---------------+---------------+-------+                       |
 *     |                     Subtype-specific data                     |
 *     |                       (variable length)                       |
 *     +---------------------------------------------------------------+

 1 Jan 00:00:00 ntp_intres[2022]: receive_blocking_req_internal: pipe read No such file or directory
 est dans work_fork.c l. 236
DPRINTF(3, ("newpeer(%s): local interface currently not bound\n",
			stoa(srcadr)));	
est dans ntp_peer.c l. 865

eglibc-2.11.1/sysdeps/unix/sysv/linux/ifaddr.c
// Sinon on pourrait inclure
eglibc-2.11.1/sysdeps/unix/sysv/linux/netlinkaccess.c

Le code provoquant l'erreur suivante:
 1 Jan 00:00:00 ntpd[2022]: ./../lib/isc/unix/ifiter_ioctl.c:181: unexpected error:
 1 Jan 00:00:00 ntpd[2022]: get interface configuration: maximum buffer size exceeded
est dans unix/ifiter_ioctl.c
/*%
 * Size of buffer for SIOCGLIFCONF, in bytes.  We assume no sane system
 * will have more than a megabyte of interface configuration data.
 */
#define IFCONF_BUFSIZE_INITIAL	4096
fait appel aux ioctl (en particulier) qui sont SIOCGIFCONF

What does that mean ?
"local interface currently not bound"

http://www.commandlinefu.com/commands/view/5710/intersection-between-two-files

0.600022s 1 DceNetdb:dce_getifaddrs(): [INFO ] MATT
0.600022s 1 SimuFd:dce_socket(0x8f6680, 1, 16, 3, 0)
0.600022s 1 ProcessUtils:UtilsAllocateFd(0x8f6680)
0.600022s 1 ProcessUtils:UtilsAllocateFd(): [DEBUG] Allocated fd=5
0.600022s 1 SimuFd:dce_bind(0x8f6680, 1, 5, 0x7f82f1d2f360, 12)
0.600022s 1 SimuFd:dce_getsockname(0x8f6680, 1, 0x7f82f1d2f360, 0x7f82f1d2f1ec)
0.600022s 1 DceNetdb:netlink_request(18)
0.600022s 1 SimuFd:dce_sendto(0x8f6680, 5, 0x7f82f1d2f150, 20, 0, 0x7f82f1d2f120, 12)
0.600022s 1 SimuFd:dce_sendmsg(0x8f6680, 1, 5, 0x7f82f1d2efe0, 0)
0.600022s 1 UnixDatagramSocketFd:DoSendmsg(0x99c830, 0x8f6680)
0.600022s 1 Node:GetNDevices(0x911fe0)
0.600022s 1 Node:GetDevice(0x911fe0, 0)
0.600022s 1 Node:GetNDevices(0x911fe0)
0.600022s 1 Node:GetDevice(0x911fe0, 1)
0.600022s 1 Node:GetNDevices(0x911fe0)
0.600022s 1 Node:GetDevice(0x911fe0, 2)
0.600022s 1 Node:GetNDevices(0x911fe0)
0.600022s 1 SimuFd:dce_recvmsg(0x8f6680, nodeId=, 1,  fd=, 5,  msg=, 0x7f82f1d2f170,  flags=, 0)
0.600022s 1 UnixDatagramSocketFd:DoRecvmsg(0x99c830, 0x8f6680, flags=, 0)
0.600022s 1 UnixDatagramSocketFd:DoRecvmsg(): [WARN ] Kesako ?
0.600022s 1 UnixDatagramSocketFd:DoRecvmsg(): [WARN ] msg_controllen < 0 , is that a problem ?
0.600022s 1 SimuFd:dce_recvmsg(0x8f6680, nodeId=, 1,  fd=, 5,  msg=, 0x7f82f1d2f170,  flags=, 0)
0.600022s 1 UnixDatagramSocketFd:DoRecvmsg(0x99c830, 0x8f6680, flags=, 0)
0.600022s 1 UnixDatagramSocketFd:DoRecvmsg(): [WARN ] Kesako ?
1.6s 1 ProcessUtils:UtilsDoSignal(): [DEBUG] deliver signal=14
1.6s 1 SimuFd:dce_write(0x8f6680, 1, 1, 0x7f82e9b1b90d, 28)
1.6s 1 UnixFileFd:Write(0x8916d0, 0x8f6680, 0x7f82e9b1b90d, 28)
1.6s 1 UnixDatagramSocketFd:DoRecvmsg(): [WARN ] Empty packet
1.6s 1 DceNetdb:netlink_request(): [WARN ] read_len=-1 < 0
1.6s 1 DceNetdb:dce_getifaddrs(): [WARN ] Could not RTM_GETLINK.
1.6s 1 SimuFd:dce_close(0x8f6680, 1, 5)
1.6s 1 DceTime:dce_time(0x8f6680, 1)
1.6s 1 ProcessUtils:UtilsNodeTime(1)
1.6s 1 Node:GetWallTime(0x911fe0)
1 ClockPerfect:GetTime(0x9120f0)

\defgroup

do-release-upgrade pr maj ubuntu

// passer les defines
xrdb -D
:set aliases bu "open -t http://bugs.debian.org/"

i3-msg mark irssi

===
Netlink dissection is available in wireshark


utils.h

#define OPENED_FD_METHOD(rettype, args) OPENED_FD_METHOD_ERR (-1, rettype, args)

1 Jan 00:00:01 ntpd[2022]: ./../lib/isc/unix/ifiter_getifaddrs.c:99: unexpected error:
1 Jan 00:00:01 ntpd[2022]: getting interface addresses: getifaddrs: Invalid argument
1 Jan 00:00:01 ntp_intres[2022]: receive_blocking_req_internal: pipe read No such file or directory



========= STDOUT
 1 Jan 00:00:00 ntpd[2022]: ntpd 4.3.21@1.2483-o Mon Apr 27 16:52:03 UTC 2015 (3): Starting
 1 Jan 00:00:00 ntpd[2022]: Command line: /home/teto/ntp/ntpd/ntpd -c /tmp/ntp.conf -ddd
ntp_rlimit: STACK: 50 4k pages
ntp_rlimit: MEMLOCK: 32 MB
 1 Jan 00:00:00 ntpd[2022]: set_process_priority: Leave priority alone: priority_done is <2>
 1 Jan 00:00:00 ntpd[2022]: proto: precision = 1.000 usec (-20)
Finished Parsing!!
create_sockets(123)
move_fd: estimated max descriptors: 1024, initial socket boundary: 16
 1 Jan 00:00:00 ntpd[2022]: Listen and drop on 0 v4wildcard 0.0.0.0:123
created interface #0: fd=6, bfd=-1, name=v4wildcard, flags=0x89, ifindex=0, sin=0.0.0.0, bcast=0.0.0.0, mask=255.255.255.255, Disabled:
update_interfaces(123)
create_sockets: Total interfaces = 1
 1 Jan 00:00:00 ntpd[2022]: Listening on routing socket on fd #7 for interface updates
io_open_sockets: maxactivefd 7
configuring filegen:
	dir:	/var/NTP/ -> /var/NTP/
	fname:	loopstats -> loopstats
	type:	2 -> 2
	flag: 1 -> 81
configuring filegen:
	dir:	/var/NTP/ -> /var/NTP/
	fname:	peerstats -> peerstats
	type:	2 -> 2
	flag: 1 -> 81
configuring filegen:
	dir:	/var/NTP/ -> /var/NTP/
	fname:	clockstats -> clockstats
	type:	2 -> 2
	flag: 1 -> 81
getnetnum given 0.0.0.0, got 0.0.0.0
getnetnum given 0.0.0.0, got 0.0.0.0
restrict: op 1 addr 0.0.0.0 mask 0.0.0.0 mflags 00000000 flags 000001d0
getnetnum given 127.0.0.1, got 127.0.0.1
restrict: op 1 addr 127.0.0.1 mask 255.255.255.255 mflags 00000000 flags 00000000
restrict: op 1 addr ::1 mask ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff mflags 00000000 flags 00000000
findexistingpeer_addr(127.127.1.0:123, NULL, 3, 0x1)
newpeer(127.127.1.0): local interface currently not bound
key_expire: at 0 associd 16467
peer_clear: at 0 next 1 associd 16467 refid INIT
event at 0 LOCAL(0) 8011 81 mobilize assoc 16467
newpeer: <null>->127.127.1.0 mode 3 vers 4 poll 6 6 flags 0x9 0x1 ttl 0 key 00000000
========= STDERR
 1 Jan 00:00:00 ntpd[2022]: Cannot set RLIMIT_MEMLOCK: Operation not permitted
 1 Jan 00:00:00 ntpd[2022]: ./../lib/isc/unix/ifiter_ioctl.c:181: unexpected error:
 1 Jan 00:00:00 ntpd[2022]: get interface configuration: maximum buffer size exceeded
 1 Jan 00:00:00 ntp_intres[2022]: receive_blocking_req_internal: pipe read No such file or directory
========= SYSLOG
receive_blocking_req_internal: pipe read No such file or directory



kod = kiss of death packet

== Comment compiler waf
The files present in the folder waflib/extras represent extensions (Waf tools) that are in a testing phase. They may be added to the Waf binary by using the --tools switch:
$ python waf-light --tools=compat15,swig,doxygen
$ ./waf-light --tools=clang_compilation_database


  --with-ns3=WITH_NS3   Specify the installed directory of ns-3-dev
Ne marche pas en fait, ne va pas chercher les headers dans le bon dossier


hi, thehajime I don't know if it's a bug but in DCE,  when you do "waf configure --with-ns3=$HOME/ns3install" , gcc still searches the include folder in /usr/local instead of "$HOME/ns3install/include"

ldd elf-cache/0/ntpd


Pour tester
utils.cc:GetTimeStamp 
PrepareDoStartProcess
dce_exit
UnixSocketFd:Setsockopt(): Unsupported setsockopt requested. level: SOL_SOCKET, optname: 35 avec 35 correspondant à SO_TIMESTAMPNS / SO_TIMESTAMP


Comment ns3 récupère le temps ?
=====






NTP
=====
La logique de détection de la précision est dans ntp_proto.c, le pb apparaît dans measure_tick_fuzz. On peut afficher un l_fp via pretty_date()

l_fp defined in ntp_fp.h . It means "long fixed point". C'est apparemment dans ntp_proto.h qu'on peut faire des choses intéressantes. La logique de get_systime est expliquée dans precision.c
Dans libntp/systime.c. On peut s'inspirer de la version dans ntpsim.c qui ajoute 200ns a chaque itération.

measure_precision
Utiliser nm pour voir les symboles

[14:33:25] Nat: this is the proposal
[14:33:26] Nat: http://pastebin.com/7YqxKY7y


Les erreurs que j'ai:

// Node, signal, XXX
0.6s 1 SimuSignal:dce_sigaction(0x863130, 1, 1, 0x7f2a28dbd900, 0x7f2a28dbd9a0)
0.6s 1 SimuSignal:dce_sigaction(0x863130, 1, 2, 0x7f2a28dbd900, 0x7f2a28dbd9a0)
0.6s 1 SimuSignal:dce_sigaction(0x863130, 1, 3, 0x7f2a28dbd900, 0x7f2a28dbd9a0)
0.6s 1 SimuSignal:dce_sigaction(0x863130, 1, 15, 0x7f2a28dbd900, 0x7f2a28dbd9a0)
0.6s 1 SimuSignal:dce_sigaction(0x863130, 1, 7, 0x7f2a28dbd900, 0x7f2a28dbd9a0)
0.6s 1 SimuSignal:dce_sigaction(0x863130, 1, 10, 0x7f2a28dbd900, 0x7f2a28dbd9a0)
0.6s 1 SimuSignal:dce_sigaction(0x863130, 1, 12, 0x7f2a28dbd900, 0x7f2a28dbd9a0)
0.6s 1 SimuSignal:dce_sigaction(0x863130, 1, 13, 0x7f2a28dbd900, 0x7f2a28dbd9a0)
0.6s 1 SimuSignal:dce_sigaction(0x863130, 1, 14, 0x7f2a28dbd8f0, 0x7f2a28dbd990)

Program received signal SIGBUS, Bus error.
0x00007fffea375bc5 in fprintf () at ../model/libc-ns3.h:282
282	NATIVE (fprintf)

which translates sequentially, into:
SIGHUP = 1
SIGINT = 2
SIGQUIT = 3
SIGTERM = 15
SIGBUS = 7
SIGUSR1 = 10
SIGUSR2 = 12
SIGPIPE = 13 
SIGALRM	= 14

1 	SIGHUP 	Hang up—indicates that the terminal a process is using has closed. Daemons that don’t run in a terminal often respond to this signal by rereading configuration files or restarting their logging tools.
2 	SIGINT 	Interrupt—end program operation. The kernel sends this signal when you press Ctrl+C.
3 	SIGQUIT 	Quit—terminate and leave a core file for debugging purposes. Normally initiated by a user action.
6 	SIGABRT 	Abort—terminate and leave a core file for debugging purposes. Normally initiated by a debugging process or self-detected error.
9 	SIGKILL 	Kill—end program operation ungracefully; the program may not save open files, etc.
10 	SIGUSR1 	User signal 1—Effect varies from one program to another.
12 	SIGUSR2 	User signal 2—Effect varies from one program to another.
15 	SIGTERM 	Terminate—end program operation gracefully (closing open files, etc.).
18 	SIGCONT 	Continue—resume processing; undo the effect of a SIGSTOP signal.
19 	SIGSTOP 	Stop—suspend program operation, similar (but not identical) to the effect of pressing Ctrl+Z.

What I need is to implement dce_gettimeofday, 
- if (signal(SIGINT, SIGINT_handler) == SIG_ERR)

Pour accéder au node dce courant:
- Thread *current = Current ();
- GET_CURRENT_NOLOG()
Process::nodeId

ns3::NodeList::GetNode 	( 	uint32_t  	n	) 	
UtilsGetNodeId()
UtilsAdvanceTime ?

dce_gettimeofday(0x179c630, 0)

6s 1 Dce:dce_getpid(0x11a4130, 1)
0.6s 1 Dce:dce___errno_location(0x11a4130, 1)
0.6s 1 Dce:dce___errno_location(0x11a4130, 1)


=sommeprod(B9:E9;B7:E7)/somme(B7:E7)
