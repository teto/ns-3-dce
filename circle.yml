machine:
    environment:
        # LDFLAGS: -pie LDFLAGS+=-rdynamic
        DCE_PATH: $HOME/iperf2

    hosts:

# checkout:
# general:
#   artifacts: #Â save files after tests
dependencies:
    pre: 
        - sudo apt-get update
        - sudo apt-get install -y mercurial libexpat1-dev git-core build-essential bison flex libssl-dev libdb-dev libpcap-dev libc6-dbg libsysfs-dev gawk indent pkg-config autoconf automake bc libsaxonb-java curl libc6-dev libboost-dev
          # todo install castxml and pygccxml afterward
    post: 
          
        - git clone -b dce_testing --single-branch git@github.com:teto/bake.git ../bake
        # DCE will be install $CIRCLE_BRANCH
        - ../bake/bake.py configure -e dce-umip-dev -e dce-linux-dev
    #     Personal way of dealing with it
    #     - ./bake/bake.py configure -e dce-umip-dev -e dce-meta-dev -e net-next-sim-3.7.0 -e freebsd-sim-dev
        - ../bake/bake.py download
        - git checkout $CIRCLE_BRANCH:
            pwd: source/ns-3-dce

        # updates the source tree, which can fail because of the previous checkout 
        # - ../bake/bake.py --debug update -vvv
        - ../bake/bake.py build -j1 -vvv
    cache_directories:

test:
    override: 
        # -r retains test files
        - ./test.py -r :
            pwd: source/ns-3-dce
        # or else I could set DCE_PATH and run normally

    post:
        - mkdir -p $CIRCLE_TEST_REPORTS/junit/
        - find ./ -type f -name results.xml -exec cp {} $CIRCLE_TEST_REPORTS/ \;
        - find ./ -type f -name xml2junit.xsl -exec cp {} $CIRCLE_TEST_REPORTS/ \;
        - saxonb-xslt $CIRCLE_TEST_REPORTS/results.xml $CIRCLE_TEST_REPORTS/xml2junit.xsl  > $CIRCLE_TEST_REPORTS/junit/junit-results.xml
